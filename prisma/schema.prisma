// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Kullanici {
  id                        Int      @id @default(autoincrement())
  eposta                    String   @unique
  sifre                     String
  ad                        String
  soyad                     String
  rol                       Rol      @default(AVUKAT)
  durum                     Durum    @default(AKTIF)
  baro                      String?  // Avukatın kayıtlı olduğu baro
  baroNo                    String?  // Avukatlar için baro numarası
  tcKimlikNo                String?  // TC Kimlik numarası
  telefonNo                 String?  // Telefon numarası
  adres                     String?  // Adres bilgisi
  profilResmi               String?  // Profil resmi yolu
  sonSenkronizasyonTarihi   DateTime? // Son UYAP senkronizasyon tarihi
  senkronizasyonDurumu      SenkronizasyonDurumu @default(BEKLEMEDE)
  olusturulmaTarihi         DateTime @default(now())
  guncellenmeTarihi         DateTime @updatedAt
  gorevler                  Gorev[]
  olusturulanMuvekkiller    Muvekkil[] @relation("OlusturanKullanici")
  olusturulanDavalar        Dava[] @relation("AvukatOlusturan")
  yuklenenDosyalar          Dosya[] @relation("KullaniciDosya")
  olusturulanGorevListeleri GorevListesi[] @relation("OlusturanKullaniciGorevListesi")
  davetEdildigiGorevListeleri GorevListesiKullanici[]
  personeller              Personel[] @relation("YoneticiPersonel")
  olusturulanNotlar        Not[]
  irtibatlar               Irtibat[] @relation("KullaniciIrtibat")
  evraklar                 Evrak[] @relation("KullaniciEvrak")
  finansIslemleri          FinansIslemi[] @relation("KullaniciFinans")
  calismaArkadaslari       CalismaArkadasi[] @relation("KullaniciCalismaArkadasi")
}

model Gorev {
  id                        Int       @id @default(autoincrement())
  aciklama                  String?
  sonTarih                  DateTime?
  oncelik                   Oncelik   @default(NORMAL)
  durum                     GorevDurumu @default(BEKLEMEDE)
  atananKullanici           Kullanici @relation(fields: [kullaniciId], references: [id])
  kullaniciId               Int
  olusturulmaTarihi         DateTime  @default(now())
  guncellemeTarihi          DateTime  @updatedAt
  adimlar                   Adim[]
  dosyalar                  Dosya[]
  liste                     GorevListesi? @relation(fields: [listeId], references: [id])
  listeId                   Int?
  gunumGorunumunde          Boolean    @default(false)
  banaAnimsat               DateTime?
  yinelenen                 Boolean    @default(false)
  dava                      Dava?      @relation(fields: [davaId], references: [id])
  davaId                    Int?
}

model Muvekkil {
  id                        Int       @id @default(autoincrement())
  ad                        String?
  soyad                     String?
  muvekkilTipi              MuvekkilTipi @default(GERCEK_KISI)
  vergiNumarasi             String?
  tcKimlikNo                String?   // TC Kimlik Numarası
  kurumAdi                  String?
  eposta                    String?   // E-posta adresi
  telefonNo                 String?   // Telefon numarası
  adres                     String?   // Adres bilgisi
  tarafSifati               String?   // Taraf sıfatı (davacı, davalı, vb.)
  davalar                   Dava[]
  notlar                    Not[]     // Müvekkile ait notlar
  evraklar                  Evrak[]   // Müvekkile ait evraklar
  finansIslemleri           FinansIslemi[] @relation("MuvekkilFinans") // Müvekkile ait finans işlemleri
  dosyalar                  Dosya[]   // Müvekkile ait dosyalar
  olusturanKullanici        Kullanici @relation("OlusturanKullanici", fields: [olusturanKullaniciId], references: [id])
  olusturanKullaniciId      Int
  olusturulmaTarihi         DateTime  @default(now())
  guncellemeTarihi          DateTime  @updatedAt
}

model Dava {
  id                        Int       @id @default(autoincrement())
  dosyaNumarasi             String    @unique
  dosyaTuru                 String?
  mahkeme                   String
  durum                     DavaDurumu @default(ACIK)
  dosyaAcilisTarihi         DateTime
  muvekkil                  Muvekkil  @relation(fields: [muvekkilId], references: [id])
  muvekkilId                Int
  gorevler                  Gorev[]
  notlar                    Not[]     // Davaya ait notlar
  avukat                    Kullanici @relation("AvukatOlusturan", fields: [avukatId], references: [id])
  avukatId                  Int
  karsiTaraf                String?
  karsiTarafAvukati         String?   // Karşı tarafın avukat bilgisi
  evraklar                  Evrak[]   // Davaya ait evraklar
  finansIslemleri           FinansIslemi[] @relation("DavaFinans") // Davaya ait finans işlemleri
  olusturulmaTarihi         DateTime  @default(now())
  guncellemeTarihi          DateTime  @updatedAt
}

model Adim {
  id                Int      @id @default(autoincrement())
  metin             String   // Adımın açıklaması/metni
  tamamlandi        Boolean  @default(false) // Adım tamamlandı mı?
  sira              Int      // Adımın görev içindeki sırası
  gorev             Gorev    @relation(fields: [gorevId], references: [id])
  gorevId           Int
  olusturulmaTarihi DateTime @default(now())
  guncellemeTarihi  DateTime @updatedAt
}

model Dosya {
  id                Int      @id @default(autoincrement())
  dosyaAdi          String   // Dosyanın adı
  dosyaYolu         String   // Dosyanın sistemdeki yolu veya URL'si
  dosyaTipi         String?  // Dosya tipi (docx, pdf, vb.)
  boyut             Float?   // Dosya boyutu (KB/MB)
  gorev             Gorev?   @relation(fields: [gorevId], references: [id])
  gorevId           Int?
  yukleyen          Kullanici @relation(fields: [kullaniciId], references: [id], name: "KullaniciDosya")
  kullaniciId       Int
  evrak             Evrak?   @relation(fields: [evrakId], references: [id])
  evrakId           Int?
  muvekkil          Muvekkil? @relation(fields: [muvekkilId], references: [id])
  muvekkilId        Int?
  ozlukEvraki       PersonelOzlukEvraki[]
  personelIzin      PersonelIzin[]
  ucretPusulasi     PersonelUcretPusulasi[]
  olusturulmaTarihi DateTime @default(now())
  guncellemeTarihi  DateTime @updatedAt
}

model GorevListesi {
  id                Int      @id @default(autoincrement())
  ad                String   // Listenin adı
  olusturan         Kullanici @relation(fields: [olusturanId], references: [id], name: "OlusturanKullaniciGorevListesi")
  olusturanId       Int
  gorevler          Gorev[]  // Bu listeye ait görevler
  kullanicilar      GorevListesiKullanici[] // Paylaşılan kullanıcılar
  olusturulmaTarihi DateTime @default(now())
  guncellemeTarihi  DateTime @updatedAt
}

model GorevListesiKullanici {
  id                Int      @id @default(autoincrement())
  gorevListesi      GorevListesi @relation(fields: [gorevListesiId], references: [id])
  gorevListesiId    Int
  kullanici         Kullanici @relation(fields: [kullaniciId], references: [id])
  kullaniciId       Int
  davetTarihi       DateTime @default(now())
  durumu            Durum    @default(AKTIF)
}

model Not {
  id                Int      @id @default(autoincrement())
  icerik            String   // Not içeriği
  notTuru           NotTuru  // Not türü
  onemDurumu        OnemDurumu @default(NORMAL) // Notun önem durumu
  hatirlatmaTarihi  DateTime? // Hatırlatma tarihi
  meblag            Float?   // Not için belirlenen meblağ
  olusturan         Kullanici @relation(fields: [olusturanId], references: [id])
  olusturanId       Int
  ilgiliMuvekkil    Muvekkil? @relation(fields: [muvekkilId], references: [id])
  muvekkilId        Int?
  ilgiliDava        Dava?    @relation(fields: [davaId], references: [id])
  davaId            Int?
  olusturulmaTarihi DateTime @default(now())
  guncellemeTarihi  DateTime @updatedAt
}

model Personel {
  id                Int      @id @default(autoincrement())
  ad                String
  soyad             String
  tcKimlikNo        String?  // TC Kimlik numarası
  telefonNo         String?  // Telefon numarası
  eposta            String?  // E-posta
  adres             String?  // Adres bilgisi
  gorevi            String   // Personelin görevi (avukat, stajyer, katip, muhasebeci vb.)
  iseBaslamaTarihi  DateTime? // İşe başlama tarihi
  yonetici          Kullanici @relation("YoneticiPersonel", fields: [yoneticiId], references: [id])
  yoneticiId        Int
  ozlukEvraklari    PersonelOzlukEvraki[]
  izinler           PersonelIzin[]
  ucretPusulalari   PersonelUcretPusulasi[]
  olusturulmaTarihi DateTime @default(now())
  guncellemeTarihi  DateTime @updatedAt
}

model PersonelOzlukEvraki {
  id                Int           @id @default(autoincrement())
  evrakTuru         OzlukEvrakTuru
  dosya             Dosya?        @relation(fields: [dosyaId], references: [id])
  dosyaId           Int?
  personel          Personel      @relation(fields: [personelId], references: [id])
  personelId        Int
  olusturulmaTarihi DateTime      @default(now())
  guncellemeTarihi  DateTime      @updatedAt
}

model PersonelIzin {
  id                Int           @id @default(autoincrement())
  izinTuru          IzinTuru
  baslangicTarihi   DateTime
  bitisTarihi       DateTime
  dosya             Dosya?        @relation(fields: [dosyaId], references: [id])
  dosyaId           Int?
  personel          Personel      @relation(fields: [personelId], references: [id])
  personelId        Int
  olusturulmaTarihi DateTime      @default(now())
  guncellemeTarihi  DateTime      @updatedAt
}

model PersonelUcretPusulasi {
  id                Int           @id @default(autoincrement())
  donem             String        // Örn: "2025 Mayıs"
  brutUcret         Float
  netUcret          Float
  dosya             Dosya?        @relation(fields: [dosyaId], references: [id])
  dosyaId           Int?
  personel          Personel      @relation(fields: [personelId], references: [id])
  personelId        Int
  olusturulmaTarihi DateTime      @default(now())
  guncellemeTarihi  DateTime      @updatedAt
}

model Irtibat {
  id                Int      @id @default(autoincrement())
  ad                String
  soyad             String
  telefonNo         String?  // Telefon numarası
  eposta            String?  // E-posta
  konusu            String?  // İrtibatla ilgili konu/açıklama
  planlananTarih    DateTime? // Planlanan görüşme tarihi
  kullanici         Kullanici @relation("KullaniciIrtibat", fields: [kullaniciId], references: [id])
  kullaniciId       Int
  olusturulmaTarihi DateTime @default(now())
  guncellemeTarihi  DateTime @updatedAt
}

model Evrak {
  id                    Int             @id @default(autoincrement())
  ad                    String          // Evrak adı
  evrakTuru             EvrakTuru       // Evrak türü
  dosyalar              Dosya[]         // Evraka ait dosyalar
  ilgiliMuvekkil        Muvekkil?       @relation(fields: [muvekkilId], references: [id])
  muvekkilId            Int?
  ilgiliDava            Dava?           @relation(fields: [davaId], references: [id])
  davaId                Int?
  olusturan             Kullanici       @relation("KullaniciEvrak", fields: [olusturanId], references: [id])
  olusturanId           Int
  // Müvekkil detay bilgileri
  muvekkilTcNo          String?         // 3. Aşama - TC No
  muvekkilTelefonNo     String?         // 3. Aşama - Telefon No
  muvekkilAdres         String?         // 3. Aşama - Adres
  // Sözleşme evrakları için özel alanlar
  sozlesmeDetay         SozlesmeDetay?  // Sözleşmeler için detay alanları
  // Görüşme tutanağı için özel alanlar
  gorusmeTutanagiDetay  GorusmeTutanagiDetay? // Görüşme tutanakları için detay alanları
  // Bilgilendirme raporu için özel alanlar
  bilgilendirmeMetni    String?         // 4. Aşama - Bilgilendirme Metni
  // KVKK metni için özel alanlar
  kvkkMetni             String?         // 4. Aşama - KVKK Metni
  // Genel Hükümler ve Önizleme
  genelHukumler         String?         // Genel Hükümler metni
  onizlemeOnayi         Boolean         @default(false) // Önizleme onaylandı mı?
  // Evrak oluşturma süreç takibi
  surecTamamlandi       Boolean         @default(false) // Tüm aşamalar tamamlandı mı?
  olusturulmaTarihi     DateTime        @default(now())
  guncellemeTarihi      DateTime        @updatedAt
}

model SozlesmeDetay {
  id                    Int             @id @default(autoincrement())
  evrak                 Evrak           @relation(fields: [evrakId], references: [id])
  evrakId               Int             @unique // Her sözleşme detayı tek bir evraka bağlı olmalı
  // 4. Aşama
  yargiTuru             YargiTuru       // Yargı Türü (Ceza, Hukuk, İcra, vb)
  gorevliYargiBirimi    String          // Görevli Yargı Birimi
  yetkiliYargiBirimi    String          // Yetkili Yargı Birimi
  davaTuru              String          // Dava Türü (manuel doldurulacak)
  // 5. Aşama
  tevdiEdilenIs         String          // Tevdi Edilen İş
  teslimEdilenBelgeler  String          // Teslim Edilen Belgeler
  // 6. Aşama
  odemeTipi             OdemeTipi       // Ödeme Tipi
  avukatlikUcreti       Float           // Avukatlık Ücreti
  yargilamaGideri       Float           // Yargılama Gideri
  pesinMi               Boolean         @default(true) // Peşin mi Taksitli mi
  taksitBilgisi         String?         // Eğer taksitli ise taksit bilgisi
  kdvOrani              Float           // KDV Oranı
  olusturulmaTarihi     DateTime        @default(now())
  guncellemeTarihi      DateTime        @updatedAt
}

model GorusmeTutanagiDetay {
  id                    Int             @id @default(autoincrement())
  evrak                 Evrak           @relation(fields: [evrakId], references: [id])
  evrakId               Int             @unique // Her görüşme tutanağı detayı tek bir evraka bağlı olmalı
  // 4. Aşama
  avukatBeyani          String          // Avukat Beyanı
  // 5. Aşama
  muvekkilBeyani        String          // Müvekkil Beyanı
  olusturulmaTarihi     DateTime        @default(now())
  guncellemeTarihi      DateTime        @updatedAt
}

model FinansIslemi {
  id                Int      @id @default(autoincrement())
  islemTuru         FinansTuru // İşlem türü (gelir/gider)
  miktar            Float    // İşlem miktarı
  aciklama          String?  // İşlem açıklaması
  islemTarihi       DateTime // İşlem tarihi
  kullanici         Kullanici @relation("KullaniciFinans", fields: [kullaniciId], references: [id])
  kullaniciId       Int
  muvekkil          Muvekkil? @relation("MuvekkilFinans", fields: [muvekkilId], references: [id])
  muvekkilId        Int?
  dava              Dava? @relation("DavaFinans", fields: [davaId], references: [id])
  davaId            Int?
  olusturulmaTarihi DateTime @default(now())
  guncellemeTarihi  DateTime @updatedAt
}

model CalismaArkadasi {
  id                Int      @id @default(autoincrement())
  ad                String
  soyad             String
  tcKimlikNo        String?  // TC Kimlik numarası
  telefonNo         String?  // Telefon numarası
  eposta            String?  // E-posta
  adres             String?  // Adres bilgisi
  baro              String?  // Kayıtlı olduğu baro
  baroNo            String?  // Baro numarası (avukatlar için)
  kullanici         Kullanici @relation("KullaniciCalismaArkadasi", fields: [kullaniciId], references: [id])
  kullaniciId       Int
  olusturulmaTarihi DateTime @default(now())
  guncellemeTarihi  DateTime @updatedAt
}

enum Rol {
  YONETICI
  AVUKAT
  SEKRETER
  KATIP
  STAJYER
  MUHASEBECI
  DIGER
}

enum Durum {
  AKTIF
  PASIF
  ASKIDA
}

enum Oncelik {
  NORMAL   // Normal öncelikli görev
  ONEMLI   // Önemli görev (filtreleme için)
}

enum GorevDurumu {
  BEKLEMEDE
  DEVAM_EDIYOR
  TAMAMLANDI
  IPTAL_EDILDI
}

enum MuvekkilTipi {
  GERCEK_KISI
  TUZEL_KISI
}

enum DavaDurumu {
  ACIK
  KAPALI
}

enum SenkronizasyonDurumu {
  BEKLEMEDE
  SENKRONIZE_EDILIYOR
  TAMAMLANDI
  BASARISIZ
  ERTELENDI
}

enum NotTuru {
  MUVEKKIL_NOTU
  IRTIBAT_NOTU
  DAVA_NOTU
  ICRA_NOTU
}

enum OnemDurumu {
  NORMAL
  ONEMLI
  ACIL
  ZAMANLI
}

enum EvrakTuru {
  SOZLESME
  GORUSME_TUTANAGI
  BILGILENDIRME_RAPORU
  KVKK_METNI
  DIGER
}

enum FinansTuru {
  SABIT_GELIR
  SABIT_GIDER
  DUZENSIZ_GELIR
  DUZENSIZ_GIDER
}

enum OzlukEvrakTuru {
  IKAMETGAH_BELGESI
  NUFUS_KAYIT_ORNEGI
  NUFUS_CUZDANI_FOTOKOPISI
  VESIKALIK_FOTOGRAF
  IS_HIZMET_SOZLESMESI
  DIPLOMA_FOTOKOPISI
  SAGLIK_RAPORU
  IS_BASVURU_FORMU
  SABIKA_KAYDI
  ASKERLIK_DURUM_BELGESI
  EVLILIK_CUZDANI_FOTOKOPISI
  COCUK_NUFUS_CUZDANI_FOTOKOPISI
  SGK_ISE_GIRIS_BILDIRGESI
  DIGER
}

enum IzinTuru {
  YILLIK_IZIN
  DOGUM_IZNI
  SUT_IZNI
  BABALIK_IZNI
  HASTALIK_IZNI
  OLUM_IZNI
  YENI_IS_ARAMA_IZNI
  RESMI_TATIL_IZNI
  HAFTA_TATILI_IZNI
  EVLILIK_IZNI
  EVLAT_EDINME_IZNI
  MAZERET_IZNI
  REFAKAT_IZNI
  DIGER
}

enum YargiTuru {
  CEZA
  HUKUK
  ICRA
  IDARI_YARGI
  SATIS_MEMURLUGU
  ARABULUCULUK
  CUMHURIYET_BASSAVCILIGI
  TAZMINAT_KOMISYON_BASKANLIGI
}

enum OdemeTipi {
  AVUKATLIK_UCRETI_VE_YARGILAMA_GIDERI_PESIN
  AVUKATLIK_UCRETI_VE_YARGILAMA_GIDERI_TAKSITLI
  AVUKATLIK_UCRETI_PESIN_VE_YARGILAMA_GIDERI_TAKSITLI
  AVUKATLIK_UCRETI_TAKSITLI_VE_YARGILAMA_GIDERI_PESIN
}

// Yargı Birimleri
model YargiBirimi {
  id                Int             @id @default(autoincrement())
  ad                String          // Yargı birimi adı
  yargiTuru         YargiTuru       // Bağlı olduğu yargı türü
  birimTuru         String          // Bölge, İl, İlçe vb.
  @@unique([ad, yargiTuru])         // Aynı isim ve yargı türü kombinasyonu tekrar edemez
}

// Ceza Mahkemeleri
model CezaMahkemesi {
  id                Int             @id @default(autoincrement())
  ad                String          // Mahkeme adı (Ağır Ceza, Asliye Ceza, vb.)
  @@unique([ad])
}

// Hukuk Mahkemeleri
model HukukMahkemesi {
  id                Int             @id @default(autoincrement())
  ad                String          // Mahkeme adı (Asliye Hukuk, Sulh Hukuk, vb.)
  @@unique([ad])
}

enum CezaMahkemeleri {
  AGIR_CEZA_MAHKEMESI
  ASLIYE_CEZA_MAHKEMESI
  SULH_CEZA_HAKIMLIGI
  ICRA_CEZA_MAHKEMESI
  COCUK_CEZA_MAHKEMESI
  COCUK_AGIR_CEZA_MAHKEMESI
  YARGITAY_CEZA_DAIRESI
  FIKRI_VE_SINAI_HAKLAR_CEZA_MAHKEMESI
  INFAZ_HAKIMLIGI
  BOLGE_ADLIYE_MAHKEMESI_CEZA_DAIRESI
}

enum HukukMahkemeleri {
  ASLIYE_HUKUK_MAHKEMESI
  SULH_HUKUK_MAHKEMESI
  IS_MAHKEMESI
  AILE_MAHKEMESI
  FIKRI_VE_SINAI_HAKLAR_MAHKEMESI
  KADASTRO_MAHKEMESI
  YARGITAY_HUKUK_DAIRESI
  ASLIYE_TICARET_MAHKEMESI
  TUKETICI_MAHKEMESI
  ICRA_HUKUK_MAHKEMESI
  BOLGE_ADLIYE_MAHKEMESI_HUKUK_DAIRESI
}
